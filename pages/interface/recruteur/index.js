import React ,{useState,useEffect,Component}from 'react'
import Head from 'next/head'
import Link from 'next/link'
import Header from '../../../components/header/header'
import Footer from '../../../components/footer/footer'
import WrapListLayout from '../../../components/layouts/wrap_list_layout'
import Axios from 'axios'
import jwt_decode from 'jwt-decode'
import ReactLocalStorage  from 'reactjs-localstorage'
import BigSizeScreenNotif from '../../../components/notification/bigSizeScreenNotif'
import Image from 'next/image'
import {api} from '../../api/api'


export default class index extends Component {

    state={

        //Initial state
        api : api,
        user : [],
        company_info:[],
        company_fillededJobs:[],
        company_unFilledJobs:[],
        europe_country:[],
        departments:[],
        consultants:[],

    }


    componentDidMount(){

        //Recupérer les informations sur l'utilisateur
        let user=[];
        const  localdata= ReactLocalStorage.reactLocalStorage.getObject('jwt')
        user=jwt_decode(JSON.stringify(localdata)) 
        this.setState({user:user})

        ///Chargement des donnéés concernant l'utilisateur*

        Axios.post(`${api}/getCompanyInfo`,
        {
            user_id:user.user_id,

        }). then( (reponse)=>{

            this.setState({company_info:reponse.data});

            if(reponse.data.company_id){

                if(reponse.data.company_country==="France"){
                    Axios.get("https://geo.api.gouv.fr/departements")
                    .then((reponse)=>{
                        this.setState({company_department:reponse.data})
                    });
                }

                Axios.post(`${this.state.api}/getUnFillededJobLimit4`,
                {
                    company_id:reponse.data.company_id 
                }).then((reponse)=>{
                    this.setState({company_unFilledJobs:reponse.data})
                })

                Axios.post(`${this.state.api}/getFillededJobLimit4`,
                {
                    company_id:reponse.data.company_id
                }).then((reponse)=>{
                    this.setState({company_fillededJobs:reponse.data})
                })

                Axios.post(`${this.state.api}/getConsultantByDepartment`,
                {
                    company_department:reponse.data.company_department
                }).then((reponse)=>{
                    this.setState({consultants:reponse.data});
                })

                ///Chargement des données régionnaux pour les formulaires
        
                Axios.get("https://restcountries.eu/rest/v2/region/europe?fields=name", {
                    europe : this.state.europe_country
                }).then( (reponse)=>{ 
                    this.setState({europe_country:reponse.data})
                })
        
            }
        
        })
    }
    customImgLoader = ({ src }) => {
        return `${src}`
    }

    loadDepartment =  (coutry) =>  {
        if(coutry==="France" ){
            Axios.get("https://geo.api.gouv.fr/departements")
            .then( (reponse)=>{
                setDepartments(reponse.data)
            });
        }
    }

    loadCity = (code) => {
        Axios.get(`https://geo.api.gouv.fr/departements/${code}/communes`)
        .then((reponse)=>{
            villes = reponse.data
        })
    }


    deletejob = (id)=>{


        if(confirm("Voulez-vous vraiment supprimer cette offre ?")){
            if(confirm("Cette oppération est irréversible "))

            Axios.post(`${api}/deleteJob`,{
                    
                job_id:id

            }).then((result)=>{
                
                if(!result.err){
                    window.location.reload(true)
                }else {
                    alert("Une erreur s'est produite pendant la suppression")
                }
            });
        }
    }

   

      

    render() {

        console.log(this.state.company_info)

        return (
            <div className="recruteur">

                <div className="interface-layout">
                    <Head>
                        <title>A recruit | Recruteur</title>
                        <meta name="description" content="Generated by create next app" />
                        <link rel="icon" href="/favicon.ico" />
                    </Head>
                    {/*---------------*/}
                    <Header
                    />
                    {/*---------------*/}
                    
                    <main className="body">

                        <div className="top mbXl">
                         
                            <div className="previewXL orientationH">
                                {!this.state.company_info.company_logo ?
                                    <div className="defaultLogo"><div>{this.state.company_info.company_name && this.state.company_info.company_name.charAt(0)}</div></div>
                                    :
                                    <Image alt="logo" loader={this.customImgLoader} src={this.state.company_info.company_logo} width={200} height={200}/>
                                }                                
                                <div style={{marginLeft:'1em'}}>
                                    <div><span>{this.state.company_info.company_name}</span></div>
                                    <div>{this.state.company_info.company_rcs}</div>
                                    <div>{this.state.company_info.company_headquarters}</div>
                                    <div>{this.state.company_info.company_address}</div>
                                    <div>{this.state.company_info.company_zip_code}</div>
                                    <div>{this.state.company_info.company_city}</div>
                                    <div>{this.state.company_info.company_department}</div>
                                    <div>Tel :{this.state.company_info.company_phone_number}</div> 

                                </div>
                                <div className="recrutor-consultant center">
                                    <div>
                                        <span>Mon conseiller A RECRUIT</span>
                                        <p>{this.state.company_info.company_consultant_name+ " " +this.state.company_info.company_consultant_firstname}</p>
                                        <div>
                                            <Image className="recrutor-consultant-img" src ="/images/zinedine.png" width={100} height = {100}/>
                                        </div>
                                        <Link href="#">
                                            <a>
                                                Vers page A RECRUIT
                                        </a>
                                        </Link>

                                    </div>

                                </div>
                            
                            </div>
                           
                        </div>
                        {/* ZONE FAIRE MA DEMANDE */}
                        <div className="show_hide_layout orientationH  center demandes_link">
                            <Link href={{pathname:"/interface/recruteur/edit",query:{companyInfo:this.state.company_info.company_representative_id}}}>
                                <a > <div className="button full">{"MA SOCIÉTÉ"}</div></a>
                            </Link>
                            <Link href={{pathname:"/interface/recruteur/newjobposting",query:{by:this.state.company_info.company_id}}}>
                                <a> <div className="button full">DEMANDE EN LIGNE</div></a>
                            </Link>
                            <Link href="/">
                                <a> <div className="button full">PRENDRE RENDEZ-VOUS AVEC UN CONSEILLER</div></a>
                            </Link>
                            <Link href={{pathname:"/utils/pdf",query:{url:this.state.company_info.company_contrat,tobesigned:true,by: this.state.company_info.company_id}}}>
                                <a> <div className="button full">MON CONTRAT</div></a>
                            </Link>
                        </div>
                        <div className="bottom ">
                        
                            {/* DEMANDE EN COURS */}
                            <WrapListLayout
                                title= "DEMANDES EN COURS ..............."
                                linkForMore=""
                            >
                                {this.state.company_unFilledJobs.length!==0 ? this.state.company_unFilledJobs.map((job, index) => {
                                    return (
                                        <div className="demande" key={index}>
                                            <div className="w100 orientationH">
                                                <div className="demande_left w100">
                                                    <label>{job.job_title}</label>
                                                    <div className="w100"><label>Crée le :</label><label>{job.created_at}</label></div>
                                                    <div className="w100"><label>Retenue  : </label>{job.job_hire}</div>
                                                </div>
                                                <div className="demande_right orientationV spaceBetween">
                                                    <img title="Modifier" src="/images/icon_edit_white.png" className= "smallIcon"/>
                                                    <img title="Supprimer" src="/images/icon_delete_white.png" className= "smallIcon" onClick={()=>{this.deletejob(job.job_id)}}/>
                                                </div>

                                            </div>
                                        </div>
            
                                        
                                    );
                                })
                                : <div>AUCUNE DEMANDE EN COURS</div>}
                                {this.state.company_unFilledJobs.length === 4 && <Link  href={{pathname:"/interface/recruteur/allJobs",query:{dest:"unfilled",company_id:this.state.company_info.company_id}}}>
                                    <a>
                                        <div className="show_more">voir plus {">>"}</div>
                                    </a>
                                </Link>}
                            
                            
                            </WrapListLayout>
                            

                            {/*MES DEMANDE*/}
                            <WrapListLayout
                                title= "DERNIÈRES DEMANDES "
                                linkForMore=""
                            >
                            {this.state.company_fillededJobs.length!==0 ? company_fillededJobs.map((job, index) => {
                                    return (
                                        <div className="demande" key={index}>
                                            <label>{job.job_title}</label>
                                            <div><label>Crée le :</label> {job.created_at}</div>
                                            <div><label>Retenue  : </label>{" "+ job.job_hire}</div>
                                        </div>                      
                                    );
                                })
                                : <div></div>}
                                    
                                <div className="demande more orientationV center">
                                    <Link  href={{pathname:"/interface/recruteur/newjobposting",query:{by:this.state.company_info.company_id}}}>
                                        <a className="center orientationV" >
                                            <div className="more_btn center">+</div>
                                            Ajouter un poste
                                        </a>
                                    </Link>
                                </div>
                                {this.state.company_fillededJobs.length === 4 && <Link  href={{pathname:"/interface/recruteur/allJobs",query:{dest:"filled",company_id:this.state.company_info.company_id}}}>
                                    <a>
                                        <div className="show_more">voir plus {">>"}</div>
                                    </a>
                                </Link>}
                            </WrapListLayout>
                            
                            <BigSizeScreenNotif
                                showHide = {this.state.show_hide3}
                                callback = {()=>{setShow_hide3(!show_hide3)}}
                            />
                            <div className="conseils w90">

                                <span>Conseils pratiques</span>
                                <div className="orientationH">
                                    <div className=" orientationV">
                                        
                                        <Image className="" src ="/images/creer_offre.jpg" width={150} height = {150}/>
                                        <Link href="#">
                                            <a>
                                            {"Créer l'offre d'emploie"}
                                            </a>
                                        </Link>
                                    </div>
                                    <div className=" orientationV">
                                        
                                    <Image className="" src ="/images/creer_presentation.jpg" width={150} height = {150}/>
                                        <Link href="#">
                                            <a>
                                            {"Créer une présentation"}
                                            </a>
                                        </Link>
                                    </div>

                                    
                                
                                    
                                </div>
                            </div>
                        </div>
                    </main>

                    {/*---------------*/}
                    <Footer/>

                </div>
            </div>
        )
    }
}

export async function getStaticProps({ params }) {

    const data = 'a'//await logedUder()

    return {
      props: {
        data
      }
    }
}


